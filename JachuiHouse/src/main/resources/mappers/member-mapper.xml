<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.house.jachui.member.model.mapper.MemberMapper">
	<!-- 로그인 시에 필요한 것 -->
	<resultMap type="Member" id="loginResultMap">
		<id property="userId" 	column="USER_ID" />
		<result property="userPw"	column="USER_PW"/>
	</resultMap>
	
	<resultMap type="Member" id="memberResultMap">
		<id		property="userId"				column="USER_ID"/>
		<result property="userPw"				column="USER_PW"/>
		<result property="userName"				column="USER_NAME"/>
		<result property="userEmail"			column="USER_EMAIL"/>
		<result property="userPhone"			column="USER_PHONE"/>
		<result property="userGender"			column="USER_GENDER"/>
		<result property="userAddress"			column="USER_ADDRESS"/>
		<result property="userBirth"			column="USER_BIRTH"/>
		<result property="userPostcode"			column="USER_POSTCODE"/>
		<result property="userDetailAddress"	column="USER_DETAILADDRESS"/>
		<result property="aloneLiving"			column="ALONE_LIVING"/>
		<result property="userRole"				column="USER_ROLE"/>
		<result property="realtorName"			column="REALTOR_NAME"/>
		<result property="realtorNo"			column="REALTOR_NO"/>
		<result property="deleteYn"				column="DELETE_YN"/>
		<result property="approveYn"			column="APPROVE_YN"/>
		<result property="joinDate"				column="JOIN_DATE"/>
		<result property="profileImage"			column="PROFILE_IMAGE"/>
		<result property="fileName"				column="FILE_NAME"/>
		<result property="fileRename"			column="FILE_RENAME"/>
		<result property="filePath"				column="FILE_PATH"/>
		
	</resultMap>
	
	<!-- 자취생 회원가입 -->
	 <insert id="signupJachui" parameterType="com.house.jachui.member.dto.SignupJachuiRequest">
        INSERT INTO MEMBER (
            USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_PHONE, 
            USER_GENDER, USER_ADDRESS, USER_BIRTH, USER_POSTCODE, 
            USER_DETAILADDRESS, ALONE_LIVING, USER_ROLE, 
            REALTOR_NAME, REALTOR_NO, DELETE_YN, APPROVE_YN, JOIN_DATE
        )
        VALUES (
            #{userId}, #{userPw}, #{userName}, #{userEmail}, #{userPhone}, 
            #{userGender}, #{userAddress}, #{userBirth}, #{userPostcode}, 
            #{userDetailAddress}, #{aloneLiving}, 'M', 
            'X', 0, DEFAULT, DEFAULT, DEFAULT
        )
    </insert>

	<!-- 공인중개사 회원가입 -->
	<insert id="signupRealtor" parameterType="SignupRealtorRequest">
        INSERT INTO MEMBER (
            USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_PHONE, 
            USER_GENDER, USER_ADDRESS, USER_POSTCODE, 
            USER_DETAILADDRESS, USER_ROLE, REALTOR_NAME, REALTOR_NO, DELETE_YN, APPROVE_YN, JOIN_DATE,
            FILE_NAME, FILE_RENAME, FILE_PATH
        )
        VALUES (
            #{userId}, #{userPw}, #{userName}, #{userEmail}, #{userPhone}, 
            'M', #{userAddress}, #{userPostcode}, 
            #{userDetailAddress}, 'R', #{realtorName}, '1', DEFAULT, DEFAULT, DEFAULT,
            #{fileName}, #{fileRename}, #{filePath}
        )
    </insert>
    
    <insert id="contactInquiry" parameterType="map">
	    INSERT INTO CONTACT (
	        USER_ID,
	        USER_EMAIL,
	        TITLE,
	        CONTENT,
	        IMAGE_PATH,
	        INQUIRY_DATE
	    ) VALUES (
	        #{contactRequest.userId},
	        #{contactRequest.userEmail},
	        #{contactRequest.title},
	        #{contactRequest.content},
	        #{imagePath},
	        NOW()
	    )
	</insert>
	
	<update id="resetPw" parameterType="Member">
		UPDATE MEMBER 
		SET USER_PW = #{userPw}
		WHERE USER_ID = #{userId}
		AND USER_EMAIL = #{userEmail}
	</update>
	
	<update id="updatePassword">
		UPDATE MEMBER
		SET USER_PW = #{newPassword}
		WHERE USER_ID = #{userId}
	</update>

	<update id="updateUserPassword">
		UPDATE MEMBER
		SET USER_PW = #{newPassword}
		WHERE USER_ID = #{userId}

	</update>
	
	<select id="selectFindId" resultType="Member">
		SELECT USER_ID, CREATED_DATE
        FROM MEMBER
        WHERE USER_NAME = #{userName}
            AND USER_EMAIL = #{userEmail}
            AND USER_ROLE = #{userRole}
            AND DELETE_YN = 'N'
	</select>
	
	<select id="selectFoundId" resultType="Member">
		SELECT USER_ID
        FROM MEMBER
        <where> 
        	USER_ROLE = #{userRole}
            AND (USER_EMAIL = #{userEmail} OR USER_NAME = #{userName})
            AND DELETE_YN = 'N'
        </where>
	</select>
	
	<select id="selectOneByLogin" resultType="Member">
	    SELECT USER_ID, USER_NAME, USER_ROLE FROM MEMBER
	    WHERE USER_ID = #{userId}
	    AND USER_PW = #{userPw}
	    AND DELETE_YN = 'N'
	</select>
	
	<select id="selectOneByIdEmail" resultType="Member">
		SELECT USER_ID, USER_EMAIL FROM MEMBER
	    WHERE USER_ID = #{userId}
	    AND USER_EMAIL = #{userEmail}
	    AND DELETE_YN = 'N'
	</select>
	
	<select id="findMemberByEmailOrName1" resultType="Member">
        SELECT USER_ID, USER_EMAIL, USER_NAME, USER_ROLE, DELETE_YN
        FROM MEMBER
        WHERE (USER_EMAIL = #{userEmail} OR USER_NAME = #{userName})
        AND DELETE_YN = 'N'
    </select>
    
    <!-- 자취생, 공인중개사 id 중복확인 -->
    <select id="overlappedID" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM MEMBER WHERE USER_ID = #{userId}
    </select>
    
    <!-- 회원가입 email 중복확인 -->
    <select id="overlappedEmail" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM MEMBER WHERE USER_EMAIL = #{userEmail}
    </select>
	
	<!-- <select id="selectMemberById" resultType="Member">
	SELECT USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_PHONE, USER_GENDER, USER_ADDRESS, USER_BIRTH,
          USER_POSTCODE, USER_DETAIL_ADDRESS, ALONE_LIVING, USER_ROLE, REALTOR_NAME, REALTOR_NO,
          DELETE_YN, APPROVE_YN, JOIN_DATE
    FROM MEMBER
    WHERE USER_ID = #{userId}
	</select> -->
	
	<delete id="deleteMember"> 
		DELETE FROM MEMBER WHERE USER_ID = #{userId}
	</delete>
	
	<select id="selectPassword" resultType="string"> 
		SELECT USER_PW FROM MEMBER WHERE USER_ID = #{userId} 
	</select>
	
	<update id="updateMember"> 
		UPDATE MEMBER SET USER_PW=#{userPw}, USER_NAME=#{userName}, USER_PHONE=#{userPhone}, 
		USER_ADDRESS=#{userAddress}, FILE_NAME = #{fileName}, FILE_RENAME = #{fileRename}, FILE_PATH = #{filePath} 
		WHERE USER_ID=#{userId} 
	</update>
	
	<update id="updateRealtor">
		UPDATE MEMBER SET USER_PW=#{userPw}, USER_NAME=#{userName}, USER_PHONE=#{userPhone}, USER_ADDRESS=#{userAddress}, REALTOR_NAME=#{realtorName},
		    FILE_NAME = #{fileName},
		    FILE_RENAME = #{fileRename},
		    FILE_PATH = #{filePath} WHERE USER_ID=#{userId} 
	</update>
	
	<update id="updatePw">
		UPDATE MEMBER 
		SET USER_PW=#{userPw}
		WHERE USER_ID=#{userId} 
	</update>
	
	<!-- 	마이페이지 이미지 수정 -->
	<update id="updateProfileImage" parameterType="map">
		UPDATE MEMBER SET PROFILE_IMAGE = #{profileImage} WHERE USER_ID = #{userId}
	</update>
	<select id="selectRealtorById" resultType="Member">
		SELECT * FROM MEMBER WHERE USER_ID= #{userId}
	</select>
	
	<select id="selectMemberById" resultType="Member">
		SELECT * FROM MEMBER WHERE USER_ID = #{userId}
	</select>
	
	<!-- 회원 관리 조회 -->
	<select id="selectListAll" resultType="Member">
		SELECT * FROM MEMBER ORDER BY USER_NAME DESC
	</select>
	
	<!-- 회원 관리 조회 - 페이지네이션-->
	<select id="getTotalCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	<!-- 회원 관리 검색 -->
	<select id="selectSearchList" resultType="Member">
		SELECT * FROM MEMBER
			<where>
	  			<if test="searchKeyword != null and searchKeyword != ''">
				(USER_NAME LIKE '%'||#{searchKeyword}||'%'
			   OR USER_ADDRESS LIKE '%'||#{searchKeyword}||'%'
			   OR REALTOR_NAME LIKE '%'||#{searchKeyword}||'%')				
				</if>
			</where>
			ORDER BY USER_ID DESC
	</select>
	<!-- 회원 관리 검색 - 페이지네이션-->
	<select id="getTotalCountByKeyword" resultType="_int">
		SELECT COUNT(*) FROM MEMBER 
			<where>
	  			<if test="searchKeyword != null and searchKeyword != ''">
				(USER_NAME LIKE '%'||#{searchKeyword}||'%'
			   OR USER_ADDRESS LIKE '%'||#{searchKeyword}||'%'
			   OR REALTOR_NAME LIKE '%'||#{searchKeyword}||'%')
			   	</if>
			</where>
	</select>
<!-- 	채팅내역 역할 -->
	<select id="getUserRoleById">
		SELECT USER_ROLE FROM MEMBER WHERE USER_ID = #{userId}
	</select>

	<!-- 관리자 승인 -->
	<update id="updateApproveYn" parameterType="String">
	  UPDATE MEMBER
	  SET APPROVE_YN = 'Y'
	  WHERE USER_ID = #{userId}
	</update>
	
	
	<!-- 채팅용 -->
</mapper>